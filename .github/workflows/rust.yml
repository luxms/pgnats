name: Rust

on:
  push:
    branches: ["main", "ghactions"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      nats:
        image: nats:latest
        options: >-
          -js
        ports:
          - 4222:4222

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libreadline-dev zlib1g-dev flex bison libxml2-dev libxslt-dev libssl-dev libxml2-utils xsltproc ccache pkg-config

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            ~/.cargo/bin
            ~/.pgrx
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install pgrx
        run: |
          if ! command -v cargo-pgrx &> /dev/null; then
            cargo install --locked cargo-pgrx
          fi
          if [ ! -d "$HOME/.pgrx" ]; then
            cargo pgrx init
          fi

      - name: Wait for NATS
        run: timeout 60 sh -c 'until nc -z localhost 4222; do sleep 1; done'

      - name: Run pgrx tests
        run: cargo pgrx test

  clippy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            ~/.cargo/bin
            ~/.pgrx
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install pgrx
        run: |
          if ! command -v cargo-pgrx &> /dev/null; then
            cargo install --locked cargo-pgrx
          fi
          if [ ! -d "$HOME/.pgrx" ]; then
            cargo pgrx init
          fi

      - name: Run Clippy
        run: cargo clippy -- -D warnings
